<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use AppBundle\Middleware\InformationsRetrieverMiddleware;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * EquipeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
    /**
     * We check if the email exists
     *
     * @param $email
     *
     * @return bool
     */
    public function existsByEmail($email)
    {
        $user = $this->findBy(['email' => $email]);
        return count($user) > 0;
    }


    /**
     * This function retrives the values of the current user connected in an array
     *
     * @return array
     */
    private function _findByEmail()
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery(
            'SELECT u
            FROM AppBundle:User u
            WHERE u.email = :user'
        )->setParameter('user', InformationsRetrieverMiddleware::getCurrentUser());
        $user = $query->getResult();
        return $user;
    }

    /**
     * The function get current user's name
     *
     * @return mixed
     */
    public function getCurrentUserName()
    {
        $currentUser = $this->_findByEmail();
        return $currentUser[0]->name;
    }


    /**
     * The function gets current user first name
     *
     * @return mixed
     */
    public function getCurrentUserFirstname()
    {
        $currentUser = $this->_findByEmail();
        return $currentUser[0]->firstname;
    }

    /**
     * The function gets current user id
     *
     * @return mixed
     */
    public function getCurrentUserId()
    {
        $currentUser = $this->_findByEmail();
        return $currentUser[0]->idBenevole;
    }
}
